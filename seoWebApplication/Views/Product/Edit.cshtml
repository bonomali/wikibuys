@model seoWebApplication.Models.mProducts

@{
    ViewBag.Title = "Edit";

    Layout = "~/Views/Shared/_BaseAdminSingle.cshtml";
}
 

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<div id="tabstrip">
    <ul>
        <li class="k-state-active">
            Product
        </li>
        <li>
            Attributes
        </li>
        <li>
            Categories
        </li>
       
    </ul>
    <div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>product</h4>
                <hr />
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.product_id)

                <div class="form-group">
                    @Html.LabelFor(model => model.store, "store", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownList("store", null, htmlAttributes: new { @class = "form-control col-md-6" })
                        @Html.ValidationMessageFor(model => model.store, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.name, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.name, new { @class = "control-label col-md-6" })
                        @Html.ValidationMessageFor(model => model.name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.description, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                         @Html.EditorFor(model => model.description, new { @class = "control-label col-md-6" })
                         @Html.ValidationMessageFor(model => model.description)
                 
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.price, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.price)
                        @Html.ValidationMessageFor(model => model.price)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.thumbnail, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.thumbnail)
                        @Html.ValidationMessageFor(model => model.thumbnail)
                        @(Html.Kendo().Upload()
                      .Name("files")
            .Async(a => a
                .Save("Save", "Upload")
                .Remove("Remove", "Upload")
                .AutoUpload(true)

                 ).Events(e => e
                 .Success("onSuccess")
             )
                        )
                        <script>
                            function onSuccess(e) {
                                $('#thumbnail').val($('.k-filename').attr(name = 'title'));
                                $('#image').val($('.k-filename').attr(name = 'title'));
                            }
                        </script>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.image, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.image)
                        @Html.ValidationMessageFor(model => model.image)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Url, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Url)
                        @Html.ValidationMessageFor(model => model.Url)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Specifications, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @(Html.Kendo().Editor()
 .Name("Specifications")
      .HtmlAttributes(new { style = "width: 740px;height:440px" })
      .Value(@<text>

    </text>)
.ImageBrowser(imageBrowser => imageBrowser
.Image("~/Content/UserFiles/Images/{0}")
.Read("Read", "ImageBrowser")
.Create("Create", "ImageBrowser")
.Destroy("Destroy", "ImageBrowser")
.Upload("Upload", "ImageBrowser")
.Thumbnail("Thumbnail", "ImageBrowser"))
                        )
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.promofront, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.promofront)
                        @Html.ValidationMessageFor(model => model.promofront)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.promodept, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.promodept)
                        @Html.ValidationMessageFor(model => model.promodept)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.defaultAttribute, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.defaultAttribute)
                        @Html.ValidationMessageFor(model => model.defaultAttribute)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.defaultAttCat, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.defaultAttCat)
                        @Html.ValidationMessageFor(model => model.defaultAttCat)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InsertDate, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.InsertDate)
                        @Html.ValidationMessageFor(model => model.InsertDate)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InsertENTUserAccountId, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.InsertENTUserAccountId)
                        @Html.ValidationMessageFor(model => model.InsertENTUserAccountId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UpdateDate, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.UpdateDate)
                        @Html.ValidationMessageFor(model => model.UpdateDate)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UpdateENTUserAccountId, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.UpdateENTUserAccountId)
                        @Html.ValidationMessageFor(model => model.UpdateENTUserAccountId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Version, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Version)
                        @Html.ValidationMessageFor(model => model.Version)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-6">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div>
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
            Add
        </button>

        <!-- Modal -->
        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                        <h4 class="modal-title" id="myModalLabel">Create</h4>
                    </div>

                    @{Html.RenderAction("Create", "ProductAttributeValues", new { id = Model.product_id });}

                </div>
            </div>
        </div>
        <table class="table">
            @if (Model.Attributes != null)
            {
                foreach (var item in Model.Attributes)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Value)
                        </td>
                        <td>
                            <button class="demo btn btn-primary btn-large" data-id="@item.AttributeValueID" id="BtnEdit">Edit</button>
                            <button class="demo btn btn-primary btn-large" data-id="@item.AttributeValueID" id="BtnDelete">Delete</button>
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
    <div>
        <div>
            <div class="form-horizontal">
                <h4>Category</h4>
                <hr />
                <div class="form-group">
                        <div class="col-md-3">
                            Department
                        </div>
                        <div class="col-md-6">
                            @ViewBag.Department
                        </div>
                    </div>

                <div class="form-group">
                    <div class="col-md-3">
                        Category
                    </div>
                    <div class="col-md-6">
                        @ViewBag.Category
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        Subcategory
                    </div>
                    <div class="col-md-6">
                        @ViewBag.Subcategory
                    </div>
                </div>
            </div>
        </div>
        <div>
            <div class="form-horizontal">
                <h4>Category</h4>
                <hr />

                <div class="form-group">

                    <label class="control-label col-md-2" for="Departments">Departments:</label>
                    <div class="col-md-6">
                        @(Html.Kendo().DropDownList()
              .Name("departments")
              .HtmlAttributes(new { style = "width:300px" })
              .OptionLabel("Select Department...")
              .DataTextField("Name")
              .DataValueField("DepartmentId")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetDepartments", "Product");
                  });

              })
                        )
                    </div>
                </div>
                <div class="form-group">

                    <label class="control-label col-md-2" for="Catergories">Catergories:</label>
                    <div class="col-md-6">
                        @(Html.Kendo().DropDownList()
              .Name("categories")
              .HtmlAttributes(new { style = "width:300px" })
              .OptionLabel("Select category...")
                      .DataTextField("Name")
              .DataValueField("Id")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetCascadeCategories", "Product").Data("filterCategories");
                  }).ServerFiltering(true);
              })
                      .Enable(false)
                      .AutoBind(false)
              .CascadeFrom("departments")
                        )
                    </div>
                </div>
                <div class="form-group">

                    <label class="control-label col-md-2" for="Subcatergories">Sub Catergories:</label>
                    <div class="col-md-6">
                        @(Html.Kendo().DropDownList()
              .Name("subcategories")
              .HtmlAttributes(new { style = "width:300px" })
                      .OptionLabel("Select subcategory...")
                      .DataTextField("Name")
              .DataValueField("Id")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetCascadeSubcategories", "Product").Data("filterSubcategories");
                  }).ServerFiltering(true);
              })
                      .Enable(false)
                      .AutoBind(false)
              .CascadeFrom("categories")
                        )
                        <!-- Button trigger modal -->
                        <button type="button" class="btn btn-primary" id="SaveProductCategory">
                            Save
                        </button>
                    </div>

                </div>

            </div>



        </div> 
   </div>
</div>
 




            <div class="modal fade bs-example-modal-sm" id="ajax-modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-sm">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                        <h4 class="modal-title" id="myModalLabel">Delete</h4>
                    </div>
                    <div class="modal-content" id="modal-content">
                        ...
                    </div>
                </div>
            </div>

            <div class="modal fade bs-example-modal-sm" id="ajax-modal-edit" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-sm">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                        <h4 class="modal-title" id="myModalLabel">Edit</h4>
                    </div>
                    <div class="modal-content" id="modal-content">
                        ...
                    </div>
                </div>
            </div>

            <script>
                function filterCategories() {
                    return {
                        departmentId: $("#departments").val()
                    };
                }

                function filterSubcategories() {
                    return {
                        categoryId: $("#categories").val()
                    };
                }
            </script>

            <script>
                $(document).ready(function () {
                    // Handler for .ready() called.
                    var $modal = $('#ajax-modal');

                    $('#SaveProductCategory').on('click', function () {
                        var id = $("#product_id").val();
                        var depts = $("#departments").val();
                        var cat = $("#categories").val();
                        var subcats = $("#subcategories").val();

                      
                        // Send the data using post 
                        var dataJSON = { ProductId: id, departmentId: depts , categoryId: cat, subcategoryId: subcats};
                     

                        $.ajax({
                            type: 'get',
                            url: "/product/SaveCategory/",
                            data: dataJSON,
                            contentType: 'application/json; charset=utf-8',
                            dataType: 'json',
                            success: function (data) {
                                window.location.href = "/Product/Edit/" + id;
                            },
                            error: function (msg) {
                               alert(msg);
                            }
                        }); 
                    

                    });

                    $('#BtnDelete').on('click', function () {
                        var thisID = $(this).data("id");
                   

                        setTimeout(function () {
                            $('#ajax-modal #modal-content').load('/productattributevalues/delete?id=' + @Model.product_id + '&attrId=' + thisID, '', function () {
                                $('#ajax-modal').modal();
                            });
                        }, 1000);
                    });

                    $('#BtnEdit').on('click', function () {
                        var thisID = $(this).data("id");
                        setTimeout(function () {
                            $('#ajax-modal-edit #modal-content').load('/productattributevalues/edit?id=' + @Model.product_id + '&attrId=' + thisID, '', function () {
                                $('#ajax-modal-edit').modal();
                            });
                        }, 1000);
                    });

                });


                $(document).ready(function () {
                    $("#tabstrip").kendoTabStrip({
                        animation: {
                            open: {
                                effects: "fadeIn"
                            }
                        }
                    });
                });
            </script>
            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
