@model seoWebApplication.Models.Subcategories

@{
    ViewBag.Title = "Create";

    Layout = "~/Views/Shared/_BaseAdminSingle.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>category</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.category_id, "category_id", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label for="Departments">Departments:</label>
                @(Html.Kendo().DropDownList()
              .Name("departments")
              .HtmlAttributes(new { style = "width:300px" })
              .OptionLabel("Select Department...")
              .DataTextField("Name")
              .DataValueField("DepartmentId")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetDepartments", "Product");
                  });

              })
                )

                <label for="categories">Catergories:</label>
                @(Html.Kendo().DropDownList()
              .Name("category_id")
              .HtmlAttributes(new { style = "width:300px" })
              .OptionLabel("Select category...")
                      .DataTextField("Name")
              .DataValueField("Id")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetCascadeCategories", "Product").Data("filterCategories");
                  }).ServerFiltering(true);
              })
                      .Enable(false)
                      .AutoBind(false)
              .CascadeFrom("departments")
                )
            </div>
        </div> 
        <script>
    function filterCategories() {
        return {
            departmentId: $("#departments").val()
        };
    }
        </script>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div> 

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
